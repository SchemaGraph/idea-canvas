## Example below shows single-table batch write where the table name is "Posts" and the objects
##   passed as arguments are written to DynamoDB. You can write to multiple tables at once by
##   specifying each table name under "tables" - e.g. "tables": {"Table1": "...", "Table2": "..."}
## Read more: https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html

#set($patchdata = [])
#foreach($item in ${ctx.args.patches})
    #set( $map = $util.dynamodb.toMapValues($item) )
    #set( $map.graphId = $util.dynamodb.toString(${ctx.args.graph}) )
    #set( $map.createdAt = $util.dynamodb.toString($util.time.nowISO8601() ))
    #set( $map.id = $util.dynamodb.toString($util.autoId() ))

    $util.qr($patchdata.add($map))
#end

{
    "version" : "2018-05-29",
    "operation" : "BatchPutItem",
    "tables" : {
        "PatchTable": $utils.toJson($patchdata)
    }
}
